// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PowerBillingUsage.Infrastructure.EntityFramework;

#nullable disable

namespace PowerBillingUsage.Infrastructure.Migrations
{
    [DbContext(typeof(PowerBillingUsageWriteDbContext))]
    [Migration("20250318173354_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PowerBillingUsage.Domain.Bills.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("BillingTypeValue")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("PowerBillingUsage.Domain.Bills.BillDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BillId")
                        .HasColumnType("uuid");

                    b.Property<int>("Consumption")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("TierName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("PowerBillingUsage.Domain.Tiers.Tier", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("BillingTypeValue")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<int>("UpperLimitInKWh")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tiers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            BillingTypeValue = 1,
                            Name = "Up to 160 KWh",
                            Rate = 0.05m,
                            UpperLimitInKWh = 160
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            BillingTypeValue = 1,
                            Name = "Up to 300 KWh",
                            Rate = 0.10m,
                            UpperLimitInKWh = 300
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            BillingTypeValue = 1,
                            Name = "Up to 500 KWh",
                            Rate = 0.12m,
                            UpperLimitInKWh = 500
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            BillingTypeValue = 1,
                            Name = "Up to 600 KWh",
                            Rate = 0.16m,
                            UpperLimitInKWh = 600
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            BillingTypeValue = 1,
                            Name = "Up to 750 KWh",
                            Rate = 0.22m,
                            UpperLimitInKWh = 750
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            BillingTypeValue = 1,
                            Name = "Up to 1000 KWh",
                            Rate = 0.27m,
                            UpperLimitInKWh = 1000
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            BillingTypeValue = 1,
                            Name = "Above 1000 KWh",
                            Rate = 0.37m,
                            UpperLimitInKWh = 2147483647
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            BillingTypeValue = 2,
                            Name = "Up to 200 KWh",
                            Rate = 0.08m,
                            UpperLimitInKWh = 200
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            BillingTypeValue = 2,
                            Name = "Up to 500 KWh",
                            Rate = 0.15m,
                            UpperLimitInKWh = 500
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            BillingTypeValue = 2,
                            Name = "Above 500 KWh",
                            Rate = 0.25m,
                            UpperLimitInKWh = 2147483647
                        });
                });

            modelBuilder.Entity("PowerBillingUsage.Domain.Bills.BillDetail", b =>
                {
                    b.HasOne("PowerBillingUsage.Domain.Bills.Bill", null)
                        .WithMany("BreakDowns")
                        .HasForeignKey("BillId");
                });

            modelBuilder.Entity("PowerBillingUsage.Domain.Bills.Bill", b =>
                {
                    b.Navigation("BreakDowns");
                });
#pragma warning restore 612, 618
        }
    }
}
